exercises = [
  {
    "id": "cond_intro",
    "title": "üìò Introduction aux conditions",
    "instruction": "Une condition permet d'ex√©cuter un bloc de code seulement si une condition est vraie.\nExemple :\n\nx = 5\nif x > 3:\n    print('x est grand')",
    "initial_code": "x = 5\nif x > 3:\n    print('x est grand')",
    "expected_output": "x est grand",
    "level": 0,
    "theme": "conditions",
    "hint": "Lis bien l'exemple et observe la structure d'une condition if.",
    "solution_code": "x = 5\nif x > 3:\n    print('x est grand')"
  },
  {
    "id": "cond_1",
    "title": "Tester une valeur avec if",
    "instruction": "Cr√©e une condition qui affiche 'OK' si x vaut 10.\nx = 10",
    "initial_code": "# Ton code ici",
    "expected_output": "OK",
    "level": 1,
    "theme": "conditions",
    "hint": "Utilise if x == 10: pour tester la valeur.",
    "solution_code": "x = 10\nif x == 10:\n    print('OK')"
  },
  {
    "id": "cond_2",
    "title": "Tester une √©galit√© simple",
    "instruction": "Si y est √©gal √† 3, affiche 'Exact', sinon rien.\ny = 3",
    "initial_code": "# Ton code ici",
    "expected_output": "Exact",
    "level": 1,
    "theme": "conditions",
    "hint": "Utilise if y == 3: pour tester l'√©galit√©.",
    "solution_code": "y = 3\nif y == 3:\n    print('Exact')"
  },
  {
    "id": "cond_3",
    "title": "Afficher un message si vrai",
    "instruction": "Si age > 18, affiche 'Majeur'.\nage = 20",
    "initial_code": "# Code ici",
    "expected_output": "Majeur",
    "level": 1,
    "theme": "conditions",
    "hint": "Utilise if age > 18: pour tester la condition.",
    "solution_code": "age = 20\nif age > 18:\n    print('Majeur')"
  },
  {
    "id": "cond_else_example",
    "title": "üìò Exemple : if / else",
    "instruction": "if permet d'ex√©cuter un bloc si vrai, else s'ex√©cute sinon.\n\nx = 4\nif x > 5:\n    print('Grand')\nelse:\n    print('Petit')",
    "initial_code": "x = 4\nif x > 5:\n    print('Grand')\nelse:\n    print('Petit')",
    "expected_output": "Petit",
    "level": 2,
    "theme": "conditions",
    "hint": "Lis bien l'exemple et observe l'utilisation de else.",
    "solution_code": "x = 4\nif x > 5:\n    print('Grand')\nelse:\n    print('Petit')"
  },
  {
    "id": "cond_4",
    "title": "Afficher Oui ou Non",
    "instruction": "Si x vaut 5, affiche 'Oui', sinon affiche 'Non'.\nx = 5",
    "initial_code": "# Code ici",
    "expected_output": "Oui",
    "level": 2,
    "theme": "conditions",
    "hint": "Utilise if/else pour afficher Oui ou Non.",
    "solution_code": "x = 5\nif x == 5:\n    print('Oui')\nelse:\n    print('Non')"
  },
  {
    "id": "cond_5",
    "title": "Afficher selon √¢ge",
    "instruction": "Si age >= 18, affiche 'Adulte', sinon 'Mineur'.\nage = 16",
    "initial_code": "# Code ici",
    "expected_output": "Mineur",
    "level": 2,
    "theme": "conditions",
    "hint": "Utilise >= pour tester l'√¢ge et else pour l'autre cas.",
    "solution_code": "age = 16\nif age >= 18:\n    print('Adulte')\nelse:\n    print('Mineur')"
  },
  {
    "id": "cond_6",
    "title": "Tester une valeur n√©gative",
    "instruction": "Si n est inf√©rieur √† 0, affiche 'N√©gatif', sinon 'Positif'.\nn = -1",
    "initial_code": "# Code ici",
    "expected_output": "N√©gatif",
    "level": 2,
    "theme": "conditions",
    "hint": "Utilise < 0 pour tester la n√©gativit√©.",
    "solution_code": "n = -1\nif n < 0:\n    print('N√©gatif')\nelse:\n    print('Positif')"
  },
  {
    "id": "cond_elif_example",
    "title": "üìò Exemple : if / elif / else",
    "instruction": "elif permet d'ajouter des alternatives √† un test.\n\nscore = 15\nif score == 20:\n    print('Excellent')\nelif score == 15:\n    print('Bien')\nelse:\n    print('√Ä revoir')",
    "initial_code": "score = 15\nif score == 20:\n    print('Excellent')\nelif score == 15:\n    print('Bien')\nelse:\n    print('√Ä revoir')",
    "expected_output": "Bien",
    "level": 3,
    "theme": "conditions",
    "hint": "Lis bien l'exemple et observe l'utilisation de elif.",
    "solution_code": "score = 15\nif score == 20:\n    print('Excellent')\nelif score == 15:\n    print('Bien')\nelse:\n    print('√Ä revoir')"
  },
  {
    "id": "cond_7",
    "title": "Choisir une note",
    "instruction": "Si note == 20 ‚Üí 'Parfait', 15 ‚Üí 'Tr√®s bien', sinon 'Continue'.\nnote = 20",
    "initial_code": "# Code ici",
    "expected_output": "Parfait",
    "level": 3,
    "theme": "conditions",
    "hint": "Utilise if/elif/else pour tester plusieurs cas.",
    "solution_code": "note = 20\nif note == 20:\n    print('Parfait')\nelif note == 15:\n    print('Tr√®s bien')\nelse:\n    print('Continue')"
  },
  {
    "id": "cond_8",
    "title": "Syst√®me m√©t√©o",
    "instruction": "Si temp > 30 ‚Üí 'Chaud', < 10 ‚Üí 'Froid', sinon 'Temp√©r√©'.\ntemp = 8",
    "initial_code": "# Temp√©rature ici",
    "expected_output": "Froid",
    "level": 3,
    "theme": "conditions",
    "hint": "Teste d'abord > 30, puis < 10, sinon else.",
    "solution_code": "temp = 8\nif temp > 30:\n    print('Chaud')\nelif temp < 10:\n    print('Froid')\nelse:\n    print('Temp√©r√©')"
  },
  {
    "id": "cond_9",
    "title": "Message d'accueil",
    "instruction": "Si langue est 'fr' ‚Üí 'Bonjour', 'en' ‚Üí 'Hello', sinon 'Salut'.\nlangue = 'en'",
    "initial_code": "# Test de langue",
    "expected_output": "Hello",
    "level": 3,
    "theme": "conditions",
    "hint": "Teste chaque valeur avec if/elif/else.",
    "solution_code": "langue = 'en'\nif langue == 'fr':\n    print('Bonjour')\nelif langue == 'en':\n    print('Hello')\nelse:\n    print('Salut')"
  },
  {
    "id": "cond_logic_example",
    "title": "üìò Exemple : and / or",
    "instruction": "'and' exige deux conditions vraies, 'or' une seule suffit.\n\nage = 19\nticket = True\nif age > 18 and ticket:\n    print('Bienvenue')",
    "initial_code": "age = 19\nticket = True\nif age > 18 and ticket:\n    print('Bienvenue')",
    "expected_output": "Bienvenue",
    "level": 4,
    "theme": "conditions",
    "hint": "Lis bien l'exemple et observe l'utilisation de and.",
    "solution_code": "age = 19\nticket = True\nif age > 18 and ticket:\n    print('Bienvenue')"
  },
  {
    "id": "cond_10",
    "title": "Acc√®s selon condition",
    "instruction": "Si connect√© et autoris√©, affiche 'Acc√®s ok'.\nconnect√© = True, autoris√© = True",
    "initial_code": "# Teste ici",
    "expected_output": "Acc√®s ok",
    "level": 4,
    "theme": "conditions",
    "hint": "Utilise and pour combiner les deux conditions.",
    "solution_code": "connect√© = True\nautoris√© = True\nif connect√© and autoris√©:\n    print('Acc√®s ok')"
  },
  {
    "id": "cond_11",
    "title": "Mot de passe ou code",
    "instruction": "Si mot_de_passe est bon OU code est bon, affiche 'Acc√®s'.",
    "initial_code": "# mot_de_passe = True, code = False",
    "expected_output": "Acc√®s",
    "level": 4,
    "theme": "conditions",
    "hint": "Utilise or pour v√©rifier l'une ou l'autre condition.",
    "solution_code": "mot_de_passe = True\ncode = False\nif mot_de_passe or code:\n    print('Acc√®s')"
  },
  {
    "id": "cond_12",
    "title": "Test imbriqu√©",
    "instruction": "Si a > 0, v√©rifie que b > 0 ‚Üí 'Deux positifs'.\na = 2, b = 3",
    "initial_code": "# Code imbriqu√©",
    "expected_output": "Deux positifs",
    "level": 4,
    "theme": "conditions",
    "hint": "Teste d'abord a > 0, puis b > 0 √† l'int√©rieur.",
    "solution_code": "a = 2\nb = 3\nif a > 0:\n    if b > 0:\n        print('Deux positifs')"
  },
  {
    "id": "cond_bonus_1",
    "title": "‚úÖ BONUS : Pair ou impair",
    "instruction": "Si n % 2 == 0, affiche 'Pair', sinon 'Impair'.\nn = 5",
    "initial_code": "# Test pair/impair",
    "expected_output": "Impair",
    "level": 5,
    "theme": "conditions",
    "hint": "Utilise % 2 pour tester la parit√©.",
    "solution_code": "n = 5\nif n % 2 == 0:\n    print('Pair')\nelse:\n    print('Impair')"
  },
  {
    "id": "cond_bonus_2",
    "title": "‚úÖ BONUS : Devine un nombre",
    "instruction": "Si nombre == 7, affiche 'Gagn√© !', sinon 'Perdu...'.\nnombre = 7",
    "initial_code": "# Code devinette",
    "expected_output": "Gagn√© !",
    "level": 5,
    "theme": "conditions",
    "hint": "Utilise == pour tester l'√©galit√© et else pour l'autre cas.",
    "solution_code": "nombre = 7\nif nombre == 7:\n    print('Gagn√© !')\nelse:\n    print('Perdu...')"
  },
  {
    "id": "cond_bonus_3",
    "title": "‚úÖ BONUS : Cat√©gorise une note",
    "instruction": "Si note >= 16 ‚Üí 'Tr√®s bien', >=10 ‚Üí 'Passable', sinon ‚Üí '√âchec'.\nnote = 9",
    "initial_code": "# Note = 9",
    "expected_output": "√âchec",
    "level": 5,
    "theme": "conditions",
    "hint": "Teste d'abord >= 16, puis >= 10, sinon else.",
    "solution_code": "note = 9\nif note >= 16:\n    print('Tr√®s bien')\nelif note >= 10:\n    print('Passable')\nelse:\n    print('√âchec')"
  }
]
